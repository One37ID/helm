
global:
  postgresName: one37id-pgsql
  redisName: one37id-redis
  tlsSecret: one37id-tls-dev


# Default values for one37 Business Connector.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

agentHostname: ibm-agent.dev-one37.id
nameOverride: one37id-ibm-agent
# Enable this if you want have liveness and readiness probes
liveCheck: false
readyCheck: false


image:
  repository: registry.gitlab.com/one37id/registry/solitaire/idnext-net8
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: [{"name": "one37secrets"}]

# Any value here above 1 will require the REDIS or MQ service
# to be enabled and specified below
replicaCount: 1
# Supported values: redis, rabbitmq
replicaQueHandler:
  enabled: false
  handler: redis

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1001

containerSecurityContext:
  runAsUser: 1001
  runAsGroup: 0
  runAsNonRoot: true

updateStrategy:
  ## StrategyType
  ## Can be set to RollingUpdate or OnDelete
  ##
  type: "OnDelete"

# The Business Connector can host the public and admin API on the different ports if needed
service:
  type: ClusterIP
  twoPortMode: true
  ports:
    bootport: 8083

ingress:
  enabled: true
  # className: nginx # use this for Azure with open source nginx ingress controller
  className: "public-iks-k8s-nginx"  # leave blank for IBM Cloud
  annotations:
    # kubernetes.io/ingress.class: public-iks-k8s-nginx  # Only use this for IBM Cloud
    proxybodysize: "50m"
  hosts:
    # - host: agenthostname # ibm-ctrl.dev-one37.id - use global override
    - paths:
        - path: /
          pathType: Prefix
          port: 8083
  tls:
    - secretName: tlsSecret
      # hosts:
      #   - agenthostname # ibm-ctrl.dev-one37.id

configmap:
  ASPNETCORE_ENVIRONMENT: "Development"
  MINIMUM_LOG_LEVEL: 1


environment:
  CREDENTIAL_CLEANER_SERVICE_CRON: "*/10 * * * *"
  WORKFLOW_CLEANER_SERVICE_CRON: "*/2 * * * *"
  #Metrics Support
  LOCAL_METRICS_ENABLED: "true"
  STATS_BUFFER_TIME: 1
  OTEL_METRICS_ENABLED: "false"
  OTEL_LOGGING_ENABLED: "false"
  OTEL_PROMETHEUS_EXPORT: "false"
  OTEL_INSTRUMENTATION_ENABLED: "false"
  # OTEL_ENDPOINT: "http://otel-collector:4318"
  # OTEL_PROTOCOL: "GRPC"
  # APP_INSIGHTS_CS: "InstrumentationKey=fe47e6cf-d4bc-44a8-96ae-7ede2471e1f8;IngestionEndpoint=https://eastus-8.in.applicationinsights.azure.com/;LiveEndpoint=https://eastus.livediagnostics.monitor.azure.com/"
  # PROMETHEUS_URL: http://prometheus-server/api/v1
  #Postgres Config
  PG_HOST: "one37id-pgsql"
  PG_PORT: "5432"
  PG_USER: postgres
  PG_ADMIN_USER: postgres
  PG_DBNAME: "one37id-ibm-agentjs_agency"
  AGENT_NAME: "IBM_AGENT"
  AGENCY_URL: "https://ibm-agentjs.dev-one37.id"

secrets:
  create: false
  app:

#Read Secrets from Postgres Secrets
postgres:
  useSecret: true
  secretName: "one37id-pgsql"
  secretRef:
    PG_PSWD: "postgres-password"
    PG_ADMIN_PSWD: "postgres-password"

#Read Secrets from Redis Instance Secrets
redis:
  secretName: "one37id-redis"
  secretRef:
    REDIS_PSWD: "redis-password"

volume:
  enabled: true
  name: external
  mountPath: /app/external
  accessModes:
    - ReadWriteOnce
  size: 1Gi
  storageClass: ibmc-vpc-block-general-purpose

extraVolumes:
extraVolumeMounts:


resources:
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## limits:
  ##   cpu: 100m
  ##   memory: 128Mi
  limits: {}
  ## requests:
  ##   cpu: 100m
  ##   memory: 128Mi
  requests: {}

nodeSelector: {}

tolerations:

affinity: {}