
# Overide values for the postgres subchart
one37secrets:
  nameOverride: "one37id-ibm-studio-reposecret"
  fullnameOverride: "one37id-ibm-studio-reposecret"


# Default values for one37id-ibm-studio.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: "one37id-studio"
fullnameOverride: "one37id-studio"

postgresName: one37id-pgsql
tlsSecret: one37id-tls-dev
studioHostname: ibm-studio.dev-one37.id

replicaCount: 1

image:
  repository: registry.gitlab.com/one37id/registry/studio-fe/net8.idnext
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: [{"name": "one37id-ibm-studio-reposecret"}]


liveCheck: false

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  roleName: ""

podAnnotations: {}

podSecurityContext:
  enabled: true
  fsGroup: 1001

containerSecurityContext:
  runAsUser: 1001
  runAsGroup: 0
  runAsNonRoot: true

service:
  type: ClusterIP
  port: 8084

ingress:
  enabled: true
  # className: nginx # use this for Azure with open source nginx ingress controller
  className: ""  # use this for IBM Cloud
  annotations:
    kubernetes.io/ingress.class: public-iks-k8s-nginx  # Only use this for IBM Cloud
    affinity: "cookie"
    proxybodysize: "50m"
    sessioncookietimeout: "36000"
    nginx.org/websocket-services: "one37id-studio"
  hosts:
    - host: ibm-studio.dev-one37.id
      paths:
        - path: /
          pathType: Prefix
          port: 8084
  tls:
    - secretName: one37id-tls-dev
      hosts:
        - ibm-studio.dev-one37.id

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

configmap:
  ASPNETCORE_ENVIRONMENT: Development
  MINIMUM_LOG_LEVEL: 1
  LOG_LEVEL: debug
  # REACT_APP_API_URL: https://aks-studio.dev-one37.id
  # REACT_APP_AUTO_LOGOUT_IN_MINUTES: 180

environment:
  MINIMUM_LOG_LEVEL: 1
  # STUDIO database params defined in configmap
  STUDIO_PG_HOST: one37id-pgsql
  STUDIO_PG_PORT: 5432
  # Access the Kubernetes API to set replica count
  # Is the Studio running in the same Kubernetes as the managed agents. Empty string disables the feature.
  RUN_IN_SAME_K8s: ""
  # Path to the kubeconfig file, either mounted as a volume secret or to a file on local disk
  K8S_CONFIG_PATH: "/etc/kubeconfig"
  K8S_AGENT_DEPLOYMENT_NAME: one37id-ibm-agentjs
  K8S_AGENT_NAMESPACE: one37id


secrets:
  create: true
  postgresSecretName: "one37id-pgsql"
  redisSecretName: "one37id-redis"
  app:
    STUDIO_PG_USER: postgres
    STUDIO_PG_ADMIN_USER: postgres

  postgres:
    passwordKey: "postgres-password"


#Read Secrets from Postgres Secrets
secretsPGRef:
  STUDIO_PG_PSWD: "postgres-password"
  STUDIO_PG_ADMIN_PSWD: "postgres-password"


volume:
  enabled: false
  name: ""
  mountPath: ""